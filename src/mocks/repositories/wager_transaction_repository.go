// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"

	database "github.com/nvnamsss/prpcl/adapters/database"
	mock "github.com/stretchr/testify/mock"

	models "github.com/nvnamsss/prpcl/models"
)

// WagerTransactionRepository is an autogenerated mock type for the WagerTransactionRepository type
type WagerTransactionRepository struct {
	mock.Mock
}

// Create provides a mock function with given fields: ctx, transaction, txs
func (_m *WagerTransactionRepository) Create(ctx context.Context, transaction *models.WagerTransaction, txs ...database.DBAdapter) error {
	_va := make([]interface{}, len(txs))
	for _i := range txs {
		_va[_i] = txs[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, transaction)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *models.WagerTransaction, ...database.DBAdapter) error); ok {
		r0 = rf(ctx, transaction, txs...)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
